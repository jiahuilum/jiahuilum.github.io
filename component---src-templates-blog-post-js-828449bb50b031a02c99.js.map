{"version":3,"sources":["webpack:///./src/components/layoutBlog.js","webpack:///./src/templates/blog-post.js"],"names":["LayoutBlog","location","title","children","data","date","header","class","className","style","boxShadow","color","to","href","fixed","avatar","childImageSharp","BlogPostTemplate","pageContext","post","markdownRemark","previous","site","siteMetadata","next","frontmatter","description","excerpt","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","pageQuery"],"mappings":"krCAqEeA,EA9DI,SAAC,GAAwC,EAAtCC,SAAuC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAG/BC,GAHoD,EAAXC,KAGrC,QA+BHC,EACH,4BAAQC,MAAM,YACd,yBAAKC,UAAU,6BACf,yBAAKD,MAAM,kDACR,kBAAC,OAAD,CACCE,MAAO,CACLC,UAAU,OACVC,MAAM,WAERC,GAAE,KAEDV,MAOT,OACE,oCA5BA,yBAAKK,MAAM,kEACX,yBAAKA,MAAM,mDACX,uBAAGM,KAAK,KACN,kBAAC,IAAD,CACEC,MAAOV,EAAKW,OAAOC,gBAAgBF,WA0BxC,gCAASR,GACR,8BAAOH,K,kCC/DX,0CAiEec,UAvDU,SAAC,GAAqC,IAAnCb,EAAkC,EAAlCA,KAAMc,EAA4B,EAA5BA,YAAajB,EAAe,EAAfA,SACvCkB,EAAOf,EAAKgB,eAEVC,GADUjB,EAAKkB,KAAKC,aAAarB,MACdgB,EAAnBG,UAAUG,EAASN,EAATM,KAElB,OACE,kBAAC,EAAD,CAAQvB,SAAUA,EAAUI,KAAMc,EAAKM,YAAYpB,KAAMH,MAAOiB,EAAKM,YAAYvB,OAC/E,kBAAC,IAAD,CACEA,MAAOiB,EAAKM,YAAYvB,MACxBwB,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,iCACE,4BAAQpB,MAAM,iDACZ,uBACEA,MAAM,yBAELY,EAAKM,YAAYpB,OAGtB,6BAASE,MAAM,mDACdqB,wBAAyB,CAAEC,OAAQV,EAAKW,QAEzC,kBAAC,IAAD,OAGF,6BACE,wBACErB,MAAO,CACLsB,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGd,GACC,kBAAC,OAAD,CAAMT,GAAIS,EAASe,OAAOC,KAAMC,IAAI,QAApC,KACKjB,EAASI,YAAYvB,QAI9B,4BACGsB,GACC,kBAAC,OAAD,CAAMZ,GAAIY,EAAKY,OAAOC,KAAMC,IAAI,QAC7Bd,EAAKC,YAAYvB,MADpB,WA5Cd,IAyDaqC,EAAS","file":"component---src-templates-blog-post-js-828449bb50b031a02c99.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\n\nconst LayoutBlog = ({ location, title, children, date }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n\n  const data = useStaticQuery(graphql`\n  query LayoutBlog {\n    avatar: file(absolutePath: { regex: \"/logo_transparent.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author {\n          name\n          summary\n        }\n      }\n    }\n  }\n`)\n\n\n  const Nav = () => (\n    <nav class=\"flex items-center justify-between flex-wrap bg-black px-8 pt-4\">\n    <div class=\"flex items-center flex-shrink-0 text-white mr-6\">\n    <a href=\"/\" >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n      /></a> \n    </div>\n  </nav>\n  )\n   const header = (\n      <header class=\"bg-black\">\n      <div className=\"container p-8 pt-32 pb-16\">\n      <div class=\"text-white leading-none text-6xl tracking-wide\">\n         <Link\n          style={{\n            boxShadow: `none`,\n            color: `inherit`,\n          }}\n          to={`/`}\n        >\n          {title}\n        </Link>\n        </div>\n        </div>\n      </header>\n    )\n \n  return (\n    <>\n   {Nav()}\n   <header>{header}</header>\n    <main>{children}</main>\n    \n    </>\n  )\n}\n\nexport default LayoutBlog\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layoutBlog\"\n\nimport Footer from \"../components/footer\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} date={post.frontmatter.date} title={post.frontmatter.title}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header class=\"lg:px-48 sm:px-16 px-8 pt-8 lg:pt-32 md:pt-16\">\n          <p\n            class=\"text-sm text-gray-500\"\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section class=\"lg:px-48 sm:px-16 px-8 pb-32 whitespace-pre-wrap\"\n         dangerouslySetInnerHTML={{ __html: post.html }} />\n      \n        <Footer/>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}