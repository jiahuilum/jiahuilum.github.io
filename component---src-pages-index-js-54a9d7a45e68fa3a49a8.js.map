{"version":3,"sources":["webpack:///./src/components/stack.js","webpack:///./src/pages/index.js"],"names":["Stack","data","class","fluid","avatar","childImageSharp","BlogIndex","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","style","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"w0BA8CeA,EAjCD,WACZ,IAAMC,EAAI,OAWV,OACE,4BAAQC,MAAM,cACV,yBAAKA,MAAM,6BACX,yBAAKA,MAAM,aACH,yBAAKA,MAAM,oEACX,wBAAIA,MAAM,YAAV,SADA,sDAMJ,yBAAKA,MAAM,cACP,yBAAKA,MAAM,mCACT,kBAAC,IAAD,CACIC,MAAOF,EAAKG,OAAOC,gBAAgBF,a,kCCtCzD,0CA8CeG,UApCG,SAAC,GAAwB,IAAtBL,EAAqB,EAArBA,KAAMM,EAAe,EAAfA,SACnBC,EAAYP,EAAKQ,KAAKC,aAAaC,MACnCC,EAAQX,EAAKY,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACA,kBAAC,EAAD,MACCC,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,4BAEE,kBAAC,OAAD,CAAME,MAAO,CAAEC,UAAU,QAAWC,GAAIP,EAAKE,OAAOC,MACjDR,IAGL,+BAAQK,EAAKC,YAAYO,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,kBAzB/D,IAsCaC,EAAS","file":"component---src-pages-index-js-54a9d7a45e68fa3a49a8.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\n\n\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Stack = () => {\n  const data = useStaticQuery(graphql`\n  query Stack {\n    avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 400, maxHeight: 400, grayscale: true) {\n          ...GatsbyImageSharpFluid_noBase64\n        }\n      }\n    }\n  }\n`)\n  return (\n    <header class=\"text-black\">\n        <div class=\"flex flex-col md:flex-row\">\n        <div class=\"md:w-6/12\">\n                <div class=\"bg-gray-50 mt-12 mb-12 p-8 sm:grid sm:grid-cols-1 mb-4 sm:gap-4 \">\n                <h3 class=\"text-3xl\">Stack</h3>\n                Development: Jekyll, React, Ruby on Rails, NodeJS\n                </div>\n             </div>\n\n            <div class=\"md:w-6/12 \">\n                <div class=\"sm:grid sm:grid-cols-1 sm:gap-4\">\n                  <Image\n                      fluid={data.avatar.childImageSharp.fluid}/>\n          </div>\n        </div>\n    </div>\n</header>\n  )\n}\n\nexport default Stack\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\n\nimport Stack from \"../components/stack\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <Stack />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}