{"componentChunkName":"component---src-templates-blog-post-js","path":"/resources-that-helped-me/","result":{"data":{"site":{"siteMetadata":{"title":"Hi! I'm Jiahui Lum"}},"markdownRemark":{"id":"3e79f7d1-2d25-5279-8a08-22a64fddf50c","excerpt":"Hi there!  Why did I start coding?  When I was tasked to solve an operational problem, I had several ideas in my head that were feasible - if and only if, I…","html":"<p>Hi there! </p>\n<p><strong>Why did I start coding?</strong> </p>\n<p>When I was tasked to solve an operational problem, I had several ideas in my head that were feasible - if and only if, I could code. It was that little switch that let me on to the world of coding. However, being really new to this coding world, I had zero idea on how and where to start. And of course, I did not want to spend any money (i.e., no online courses or real-life courses) as I thought it would be 1) more fulfilling to learn by myself 2) have higher utility and monetary returns. </p>\n<p><strong>Why did I choose Ruby as my first language?</strong><br>\nBased on my google searches, Ruby appeared to be the easiest to learn. Some said that it would be better to learn the language (Ruby) first and subsequently learn Ruby on Rails, which I didn’t as I wanted to create my first application as quick as possible. I wouldn’t say it’s a bad move, for someone is a kinesthetic learner, if I had started with learning how to code first , I would have long given up learning how to code. </p>\n<p>I feel that computer science has a different approach on thinking and solving problems compared to the social sciences or natural sciences. It can be really difficult to pick it up especially if you are used to way of thinking from the other disciplines. </p>\n<p><strong>Going back to the main topic, for someone with zero knowledge on coding, what can I do with Ruby on Rails? Can I create a web application with it? What kind of functions will it have?</strong> </p>\n<p>Ruby on Rails is an excellent framework to start off with. In Michael Hartl’s ”<a href=\"https://3rd-edition.railstutorial.org/book\">Ruby on Rails Tutorial</a>”, after installing Ruby onto your computer, you can easily create a CRUD（which stands for Create, Read, Update and Delete, and essentially the basis of data storage) application with a single code on the command-line. To-do apps, notepads, recipe apps, shopping carts, etc - all of these use some form of CRUD. In a to-do app, you Create a “to-do”. If you want to retrieve the “to-do” that you’ve created, you Read. When you’re done with the “to-do”, you Update the “to-do” as “finished”. And lastly, if you created a “to-do” by mistake, you can Deletethat “to-do”. With CRUD as a fundamental basis, I started to believe I was capable of creating different applications with many different functions that could help to solve problems that could make life easier. </p>\n<p>I do agree that <a href=\"https://3rd-edition.railstutorial.org/book\">Ruby on Rails Tutorial</a> is quite a tough read for a first timer, however, I recommend it as it covers everything needed to build your first application, including Authentication and Authorization. I also followed this <a href=\"https://www.devwalks.com/lets-build-instagram-in-rails-part-1/\">Instagram-clone</a> tutorial that when completed, produces a really similar version of Instagram (including the design)! It also covers CSS and tests.</p>\n<p><strong>I don’t regret this journey that was really hard to begin, and would be tough to continue too. But life is always about learning, isn’t it?</strong> </p>","frontmatter":{"title":"Resources that helped me","date":"March 29, 2020","description":"Resources that I've used when I started to learn to code"}}},"pageContext":{"slug":"/resources-that-helped-me/","previous":null,"next":null}}}